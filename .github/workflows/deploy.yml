name: CI/CD Pipeline for Railway Deployment

on:
  push:
    branches:
      - master  # Or main, only deploy on the main/master branch
  pull_request:
    branches:
      - master  # Handle staging from the develop branch

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
  POSTGRES_DB_URL: ${{ secrets.POSTGRES_DB_URL }}
  RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
  RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
  RAILWAY_STAGING_PROJECT_ID: ${{ secrets.RAILWAY_STAGING_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install  # Or adjust for your environment (pip install for Python, etc.)

      - name: Run Tests
        run: npm run test  # Adjust based on your project

  deploy-production:
    runs-on: ubuntu-latest
    needs: test  # Only deploy after tests pass
    if: github.ref == 'refs/heads/master'  # Only deploy when pushing to master

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Railway Production
        run: |
          curl -X POST "https://backboard.railway.app/project/${{ env.RAILWAY_PROJECT_ID }}/deploy" \
          -H "Authorization: Bearer ${{ env.RAILWAY_API_TOKEN }}"

      - name: Notify Success
        run: echo "Production deployment successful!"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test  # Only deploy after tests pass
    if: github.ref == 'refs/heads/develop'  # Deploy staging from develop branch

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Railway Staging
        run: |
          curl -X POST "https://backboard.railway.app/project/${{ env.RAILWAY_STAGING_PROJECT_ID }}/deploy" \
          -H "Authorization: Bearer ${{ env.RAILWAY_API_TOKEN }}"

      - name: Notify Success
        run: echo "Staging deployment successful!"
